name: Test repository
# Clone repository and run `tox -epy39`, optionally force-installing a
# different version of Qiskit

on:
  workflow_call:
    inputs:
      repo_name:
        description: "GitHub repository owner-name/repo-name"
        type: string
        required: true
      test_type:
        description: "'standard', 'stable', or 'dev'"
        type: string
        required: true

  workflow_dispatch:
    inputs:
      repo_name:
        description: "GitHub repository owner-name/repo-name"
        type: string
        required: true
      test_type:
        description: "Type of test to run"
        required: true 
        default: 'standard'
        type: choice
        options:
          - standard
          - stable
          - development

jobs:
  run_tests:
    name: Test ${{ inputs.repo_name }}
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo_name }}

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Set up standard environment
        run: |
          # Create the tox environment using the package versions specified in
          # the repo. This means any later force-installs take precedence.
          if [ ! -e tox.ini ]; then echo "No tox.ini" && exit 1; fi
          pip install tox
          tox -epy39 --notest  # Create tox environment

      - name: Force install latest Qiskit
        if: ${{ inputs.test_type == 'stable' }}
        run: |
          tox exec -epy39 -- pip uninstall -y qiskit
          tox exec -epy39 -- pip install --upgrade qiskit --force-reinstall

      - name: Force install development Qiskit
        if: ${{ inputs.test_type == 'development' }}
        run: |
          tox exec -epy39 -- pip uninstall -y qiskit
          QISKIT_COMMIT_HASH=$(git ls-remote https://github.com/Qiskit/qiskit refs/heads/main | cut -f 1)
          tox exec -epy39 -- pip install git+https://github.com/Qiskit/qiskit@"$QISKIT_COMMIT_HASH" --force-reinstall
          
      - name: Run tests
        run: |
          tox -epy39
          # TODO: Find a cleaner way to get qiskit version
          QISKIT_VERSION=$(tox exec -epy39 -- python -c "import qiskit; print(qiskit.__version__)" | awk "NR==2")

      - name: Report results
        if: ${{ !cancelled() }}
        run: |
          echo "QISKIT_VERSION=$QISKIT_VERSION" >> "$GITHUB_OUTPUT"
          echo "QISKIT_COMMIT_HASH=$QISKIT_COMMIT_HASH" >> "$GITHUB_OUTPUT"
          echo "TEST_TYPE=${{ inputs.test_type }}" >> "$GITHUB_OUTPUT"
          echo "LOGS_LINK=https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}" >> "$GITHUB_OUTPUT"

      - name: Report pass
        if: ${{ success() }}
        run: |
          echo "PASS=true" >> "$GITHUB_OUTPUT"

      - name: Report failure
        if: ${{ failure() }}
        run: |
          echo "PASS=false" >> "$GITHUB_OUTPUT"


