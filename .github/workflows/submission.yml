name: Submission check

###
# - install deps
# - parse issue
# - run lint, coverage, tests
# - if success:
# -- comment of success
# -- create PR with change to readme
# -- link pr to issue
# - if something went wrong:
# -- comment run url in issue

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  submission_workflow:
    if: |
      (startsWith(github.event.issue.title, '[Submission]:') && github.event.action == 'opened') ||
      (github.event.comment.body == '!redo' && startsWith(github.event.issue.title, '[Submission]:'))
    runs-on: ubuntu-latest
    env:
      tox_env: "py39"
      tier: "MAIN"
      python-version: [3.9]

    steps:
    - name: Get current datetime
      id: date
      run: echo "::set-output name=date::$(date +'%Y_%m_%d_%H_%M')"
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Parse submission
      id: parse-issue
      run: |
        python manager.py parser_issue --body="${{ github.event.issue.body }}"

    - name: Linter check
      uses: ./.github/actions/run-tests
      with:
        repo_url: ${{ steps.parse-issue.outputs.SUBMISSION_REPO }}
        check_type: "lint"
        tox_env: ${{ env.tox_env }}
        tier: ${{ env.tier }}
    - name: Coverage check
      uses: ./.github/actions/run-tests
      with:
        repo_url: ${{ steps.parse-issue.outputs.SUBMISSION_REPO }}
        check_type: "coverage"
        tox_env: ${{ env.tox_env }}
        tier: ${{ env.tier }}
    - name: Tests stable check
      uses: ./.github/actions/run-tests
      with:
        repo_url: ${{ steps.parse-issue.outputs.SUBMISSION_REPO }}
        check_type: "test_stable"
        tox_env: ${{ env.tox_env }}
        tier: ${{ env.tier }}
    - name: Tests dev check
      uses: ./.github/actions/run-tests
      with:
        repo_url: ${{ steps.parse-issue.outputs.SUBMISSION_REPO }}
        check_type: "test_dev"
        tox_env: ${{ env.tox_env }}
        tier: ${{ env.tier }}

    - name: Update readme
      if: ${{ success() }}
      run: |
        python manager.py add_repo_2db --repo_author=${{ steps.parse-issue.outputs.SUBMISSION_NAME }} \
                                       --repo_link="${{ steps.parse-issue.outputs.SUBMISSION_REPO }}" \
                                       --repo_description="${{ steps.parse-issue.outputs.SUBMISSION_DESCRIPTION }}" \
                                       --repo_licence="${{ steps.parse-issue.outputs.SUBMISSION_LICENCE }}" \
                                       --repo_contact="${{ steps.parse-issue.outputs.SUBMISSION_CONTACT }}" \
                                       --repo_alt="${{ steps.parse-issue.outputs.SUBMISSION_ALTERNATIVES }}" \
                                       --repo_affiliations="${{ steps.parse-issue.outputs.SUBMISSION_AFFILIATIONS }}" \
                                       --repo_labels="${{ steps.parse-issue.outputs.SUBMISSION_LABELS }}"
        python manager.py generate_readme

    - name: Commit changes and create Pull Request
      if: ${{ success() &&  CI == "true" }}
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        repository: "qiskit-community/ecosystem"
        commit-message: Submission - Add ${{ steps.parse-issue.outputs.SUBMISSION_REPO }} to list.
        title: Add ${{ steps.parse-issue.outputs.SUBMISSION_NAME }} to list.
        body: |
          Add ${{ steps.parse-issue.outputs.SUBMISSION_NAME }} to list.
          Closes #${{ github.event.issue.number }}
        branch: submission-${{ github.event.issue.number }}
        base: main

    - name: Create comment on success
      if: ${{ success() }}
      uses: peter-evans/create-or-update-comment@v1
      with:
        repository: "qiskit-community/ecosystem"
        issue-number: ${{ github.event.issue.number }}
        body: |
          Successfull submission! :sparkles: PR #${{ steps.cpr.outputs.pull-request-number }}

    - name: Create comment on failure
      if: ${{ failure() }}
      uses: peter-evans/create-or-update-comment@v1
      with:
        repository: "qiskit-community/ecosystem"
        issue-number: ${{ github.event.issue.number }}
        body: |
          Fail submission! :warning:
          Error see: https://github.com/qiskit-community/ecosystem/actions/runs/${{ GITHUB_RUN_ID }}
          You can write a comment with "!redo" to rerun the submission process.
