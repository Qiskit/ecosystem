name: 'Ecosystem | Run tests'
description: 'Run tests for repository'
inputs:
  repo_url:
    description: 'GitHub repository URL'
    required: true
  check_type:
    description: 'Check type. Available options: test_standard, test_stable, test_dev, lint, coverage'
    required: true
  tox_env:
    description: "Tox test env"
    required: true
  tier:
    description: "Tier of repository"
    required: true
  run_name:
    description: "Name of execution"
    required: false
    default: ""
  logs_link:
    description: "URL to github workflow run"
    required: false
runs:
  using: "composite"
  steps:
    - name: Run Unit Tests
      id: checks
      run: |
        if [ "${{ inputs.check_type }}" == "test_standard" ]; then
          echo "Running repository tests for ${{inputs.repo_url}}..."
          python manager.py python_standard_tests ${{inputs.repo_url}} \
                                                  --run_name=${{inputs.run_name}} \
                                                  --python_version=${{inputs.tox_env}} \
                                                  --tier=${{ inputs.tier }} \
                                                  --logs_link=${{ inputs.logs_link }}
        fi
        if [ "${{ inputs.check_type }}" == "test_stable" ]; then
          echo "Running Qiskit stable tests for ${{inputs.repo_url}}..."
          python manager.py python_stable_tests ${{inputs.repo_url}} \
                                                  --run_name=${{inputs.run_name}} \
                                                  --python_version=${{inputs.tox_env}} \
                                                  --tier=${{ inputs.tier }} \
                                                  --logs_link=${{ inputs.logs_link }}
        fi
        if [ "${{ inputs.check_type }}" == "test_dev" ]; then
          echo "Running Qiskit dev tests for ${{inputs.repo_url}}..."
          python manager.py python_dev_tests ${{inputs.repo_url}} \
                                                  --run_name=${{inputs.run_name}} \
                                                  --python_version=${{inputs.tox_env}} \
                                                  --tier=${{ inputs.tier }} \
                                                  --logs_link=${{ inputs.logs_link }}
        fi
        if [ "${{ inputs.check_type }}" == "lint" ]; then
          echo "Running lint tests for ${{inputs.repo_url}}..."
          python manager.py python_styles_check ${{inputs.repo_url}} --run_name=${{inputs.run_name}} --tier=${{inputs.tier}} --style_type="pylint"
        fi
        if [ "${{ inputs.check_type }}" == "coverage" ]; then
          echo "Running coverage tests for ${{inputs.repo_url}}..."
          python manager.py python_coverage ${{inputs.repo_url}} --run_name=${{inputs.run_name}} --tier=${{inputs.tier}} --coverage_type=""
        fi
      shell: bash
outputs:
  result:
    description: "Result from tests check"
    value: ${{ steps.checks.outputs.PASS }}
  depreciation:
    description: "Qiskit depreciation from tests check"
    value: ${{ steps.checks.outputs.DEPRECIATION }}
  error:
    description: "Error from tests check"
    value: ${{ steps.checks.outputs.ERROR }}
  fail:
    description: "Fail from tests check"
    value: ${{ steps.checks.outputs.FAIL }}
